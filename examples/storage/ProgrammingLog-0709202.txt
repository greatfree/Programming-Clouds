10/22/2020, Bing Li

The smart contract registry service, the collaborator tier, is implemented.

The code to access the existing block-chains is tested in the version.

The current lines of code are 10455.

The number of files is 213.

================================================

09/14/2020, Bing Li

A trivial bug is fixed on the client side.

It is caused by the uploading size.

The current lines of code are 5550.

The number of files is 108.

================================================

09/14/2020, Bing Li

Now the scalability of the storage cluster is done.

The synchronization among the children of the storage cluster is performed through the root.

That is a better solution.

The current lines of code are 5543.

The number of files is 108.

================================================

09/13/2020, Bing Li

The scalable storage system is still being implemented.

Since the system is tested on a single machine, the current version uses the file locking to do that.

It causes exceptions.

I have NOT figured out the reason.

I decide to give up the design and use the storage root server to perform the synchronization among the storage children.

The current lines of code are 5166.

The number of files is 101.

================================================

09/10/2020, Bing Li

I need to implement the scalable storage system based on the scalable cluster APIs.

1) A simulator is designed to send workload status messages (HeavyWorkloadNotification/SuperfluousResourcesNotification).

2) Since data is evenly distributed in a storage cluster, once if the heavy workload message is sent, it indicates that all of the current children of the storage cluster become read-only.

3) Newly joined children are writable as well as readable.

4) If the storage cluster is superfluous in terms of idle computing resources, the left nodes should belong to one partition.

5) They need to redistribute their slices within the cluster.

6) The left case is not common in practice.

================================================

09/09/2020, Bing Li

A fault-tolerant storage version is done.

But I have NOT tested it under the situation that a node gets failed.

Now data being replicated within partitions is succeeded to be done.

The current lines of code are 4319.

The number of files is 87.

================================================

09/04/2020, Bing Li

Now the uploading/downloading is accomplished within a single machine.

The number of slices is increased.

It is time for me to design the code to increase the scale automatically.

And, the fault-tolerance is the final task.

The current lines of code are 4019.

The number of files 80.

================================================

09/04/2020, Bing Li

To allow multiple storage children residing on the same machine, synchronous file accessing is updated such that those children can synchronize.

Now the problem is solved.

The current lines of code are 3973.

The number of files is 80.

================================================

07/21/2020, Bing Li

Now the initial version of S3 is done.

Uploading and downloading are finished.

The current lines of code are 3689.

The number of files is 78.

================================================

07/21/2020, Bing Li

The version is important.

The writing procedure runs well.

One issue is that the sub systems are required to be executed in a certain order such that they can get the IP addresses correctly from the registry server when the system is started.

I think it is not necessary.

When one IP is not available, the IP can be obtained immediate before it is used to send data.

But it is not a crucial issue.

The current lines of code are 3618.

The number of files is 78.

================================================

07/19/2020, Bing Li

Now the initial version of coding is done.

I can test the system.

Coding is not implemented.

But it should be easy.

The current lines of code are 3045.

The number of files is 68.

================================================

07/19/2020, Bing Li

Now I am implementing the reading procedure.

In the current version, the decoded slices are persisted at the EDSA cluster.

I think it is better to persist the decoded slices to the storage cluster as well as the encoded slices.

The current lines of code are 2927.

The number of files is 69.

================================================

07/12/2020, Bing Li

Today the writing procedure for the S3 is coded.

But it has not been tested.

The current lines of code are 2086.

The number of files is 49.
